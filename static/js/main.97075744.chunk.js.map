{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","chardata","map","row","index","key","name","job","city","year","onClick","removeCharacter","Table","this","border","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","i","character","className","ReactDOM","render","document","getElementById"],"mappings":"qQAGMA,EAAc,WACd,OAEM,+BACA,4BACM,oCACA,mCACA,uCACA,oCACA,2CAOZC,EAAY,SAAAC,GACZ,IAAMC,EAAOD,EAAME,SAASC,KAAI,SAACC,EAAIC,GAC/B,OACM,wBAAIC,IAAOD,GACL,4BAAKD,EAAIG,KAAT,KAAiBF,GACjB,4BAAKD,EAAII,KACT,4BAAKJ,EAAIK,MACT,4BAAKL,EAAIM,MACT,4BACM,4BAAQC,QAAS,kBAAIX,EAAMY,gBAAgBP,KAA3C,eAMxB,OAAO,+BAAQJ,IAsBNY,E,iLAfC,IAAD,EACgCC,KAAKd,MAAjCY,EADJ,EACIA,gBAAgBV,EADpB,EACoBA,SACvB,OAEM,2BAAOa,OAAO,KACR,kBAAC,EAAD,CAAWb,SAAWA,EAAUU,gBAAkBA,IAClD,kBAAC,EAAD,W,GARJI,a,OCwBLC,E,YA7DT,WAAYjB,GAAQ,IAAD,8BACb,4CAAMA,KAaZkB,aAAe,SAAAC,GAAU,IAAD,EACMA,EAAMC,OAAtBb,EADU,EACVA,KAAMc,EADI,EACJA,MAEd,EAAKC,SAAL,eACOf,EAAOc,KAlBD,EAsBnBE,WAAa,WACP,EAAKvB,MAAMwB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eArBnB,EAAKA,aAAe,CACdnB,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,KAAM,IAGZ,EAAKe,MAAQ,EAAKC,aAVL,E,sEA2BT,IAAD,EAC4BZ,KAAKW,MAA5BlB,EADL,EACKA,KAAKC,EADV,EACUA,IAAIC,EADd,EACcA,KAAKC,EADnB,EACmBA,KAEtB,OACM,8BACM,uCACA,2BACMiB,KAAK,OACLpB,KAAK,OACLc,MAAOd,EACPqB,SAAUd,KAAKI,eAN3B,IAM4C,6BACtC,sCACA,2BACMS,KAAK,OACLpB,KAAK,MACLc,MAAOb,EACPoB,SAAUd,KAAKI,eAAgB,6BACrC,2CACA,2BACMS,KAAK,OACLpB,KAAK,OACLc,MAAOZ,EACPmB,SAAUd,KAAKI,eAAgB,6BACrC,uCACA,2BACMS,KAAK,OACLpB,KAAK,OACLc,MAAOX,EACPkB,SAAUd,KAAKI,eAxB3B,IAwB4C,6BAChC,2BAAOS,KAAK,SAASN,MAAM,SAASV,QAASG,KAAKS,kB,GAzD7DP,aCqCJa,E,2MAjCTJ,MAAQ,CACFK,WAAY,I,EAelBlB,gBAAkB,SAAAP,GAAU,IACdyB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CAERQ,WAAYA,EAAWC,QAAO,SAACD,EAAYE,GACrC,OAAOA,IAAM3B,Q,EAK/BmB,aAAe,SAAAS,GACT,EAAKX,SAAS,CAACQ,WAAW,GAAD,mBAAK,EAAKL,MAAMK,YAAhB,CAA2BG,O,wEAxBhD,IACIH,EAAehB,KAAKW,MAApBK,WACR,OAEM,yBAAKI,UAAU,aACT,kBAAC,EAAD,CAAMV,aAAcV,KAAKU,eAAgB,6BACzC,kBAAC,EAAD,CAAOtB,SAAU4B,EAAalB,gBAAkBE,KAAKF,uB,GAX3DI,a,YCQlBmB,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,W","file":"static/js/main.97075744.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nconst TableHeader = () =>{\n      return(\n\n            <thead>\n            <tr>\n                  <th>Name</th>\n                  <th>Job</th>\n                  <th>Loction</th>\n                  <th>Year</th>\n                  <th> Delete </th>\n\n            </tr>\n      </thead>\n      )\n}\n\nconst TableBody = props =>{\n      const rows = props.chardata.map((row,index)=>{\n            return(\n                  <tr key ={ index}>\n                        <td>{row.name}  {index}</td>\n                        <td>{row.job}</td>\n                        <td>{row.city}</td>\n                        <td>{row.year}</td>\n                        <td>\n                              <button onClick={()=>props.removeCharacter(index)}>Delete\n                              </button>\n                        </td>\n                  </tr>\n            )\n      })\n      return <tbody>{rows}</tbody>\n      \n           \n}\n\nclass Table extends Component {\n\n      render() {\n            const {removeCharacter,chardata} = this.props\n            return (\n                \n                  <table border=\"1\">\n                        <TableBody chardata ={chardata} removeCharacter ={removeCharacter} />\n                        <TableHeader />\n                  </table>\n            )\n      }\n\n}\n\n\n\nexport default Table","import React, { Component } from \"react\";\nclass Form extends Component {\n      constructor(props) {\n            super(props)\n\n            this.initialState = {\n                  name: '',\n                  job: '',\n                  city: '',\n                  year: ''\n            }\n\n            this.state = this.initialState\n      }\n\n\n      handleChange = event => {\n            const { name, value } = event.target\n\n            this.setState({\n                  [name]: value,\n            })\n      }\n\n      submitForm = ()=>{\n            this.props.handleSubmit(this.state)\n            this.setState(this.initialState)\n      }\n\n      render() {\n            const { name,job,city,year } = this.state;\n\n            return (\n                  <form>\n                        <label>Name</label>\n                        <input\n                              type=\"text\"\n                              name=\"name\"\n                              value={name}\n                              onChange={this.handleChange} /> <br/>\n                        <label>Job</label>\n                        <input\n                              type=\"text\"\n                              name=\"job\"\n                              value={job}\n                              onChange={this.handleChange} /><br/>\n                        <label>Location</label>\n                        <input\n                              type=\"text\"\n                              name=\"city\"\n                              value={city}\n                              onChange={this.handleChange} /><br/>\n                        <label>Year</label>\n                        <input\n                              type=\"text\"\n                              name=\"year\"\n                              value={year}\n                              onChange={this.handleChange} /> <br/>\n                              <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n                  </form>\n            );\n      }\n}\nexport default Form;","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n      state = {\n            characters: [ ],\n\n      }\n      render() {\n            const { characters } = this.state      \n            return (\n                  \n                  <div className=\"container\">\n                        <Form handleSubmit={this.handleSubmit} /><br/>\n                        <Table chardata={characters}  removeCharacter ={this.removeCharacter}/>\n                  </div>\n            )\n      }\n\n\n      removeCharacter = index => {\n            const { characters } = this.state\n\n            this.setState({\n\n                  characters: characters.filter((characters, i) => {\n                        return i !== index\n                  }),\n            })\n      }\n\n      handleSubmit = character =>{\n            this.setState({characters:[...this.state.characters,character]})\n      }\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import App from './Api';\n\nimport './index.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n"],"sourceRoot":""}